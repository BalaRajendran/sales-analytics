"""Initial schema

Revision ID: 027d5f181c40
Revises: 
Create Date: 2025-10-20 22:40:32.798719

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '027d5f181c40'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('name', sa.String(length=100), nullable=False, comment='Category name'),
    sa.Column('parent_id', sa.UUID(), nullable=True, comment='Parent category ID for hierarchical structure'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was last updated'),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='Product categories with hierarchical structure'
    )
    op.create_index('idx_categories_name', 'categories', ['name'], unique=False)
    op.create_index('idx_categories_parent', 'categories', ['parent_id'], unique=False)
    op.create_index(op.f('ix_categories_created_at'), 'categories', ['created_at'], unique=False)
    op.create_index(op.f('ix_categories_name'), 'categories', ['name'], unique=False)
    op.create_index(op.f('ix_categories_parent_id'), 'categories', ['parent_id'], unique=False)
    op.create_table('customers',
    sa.Column('name', sa.String(length=255), nullable=False, comment='Customer full name'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='Customer email address (unique)'),
    sa.Column('segment', sa.String(length=50), nullable=True, comment='Customer segment: Premium, Regular, New, At-Risk, Churned'),
    sa.Column('total_lifetime_value', sa.Numeric(precision=15, scale=2), nullable=True, comment='Total lifetime value of customer'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was last updated'),
    sa.CheckConstraint("segment IN ('Premium', 'Regular', 'New', 'At-Risk', 'Churned')", name='ck_customer_segment'),
    sa.CheckConstraint('total_lifetime_value >= 0', name='ck_customer_lifetime_value_positive'),
    sa.PrimaryKeyConstraint('id'),
    comment='Customers table for e-commerce analytics'
    )
    op.create_index('idx_customers_created_at', 'customers', ['created_at'], unique=False)
    op.create_index('idx_customers_email', 'customers', ['email'], unique=False)
    op.create_index('idx_customers_lifetime_value', 'customers', ['total_lifetime_value'], unique=False)
    op.create_index('idx_customers_segment', 'customers', ['segment'], unique=False)
    op.create_index(op.f('ix_customers_created_at'), 'customers', ['created_at'], unique=False)
    op.create_index(op.f('ix_customers_email'), 'customers', ['email'], unique=True)
    op.create_index(op.f('ix_customers_segment'), 'customers', ['segment'], unique=False)
    op.create_index(op.f('ix_customers_total_lifetime_value'), 'customers', ['total_lifetime_value'], unique=False)
    op.create_table('sales_representatives',
    sa.Column('name', sa.String(length=255), nullable=False, comment='Sales representative full name'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='Sales representative email address (unique)'),
    sa.Column('region', sa.String(length=100), nullable=True, comment='Sales region or territory'),
    sa.Column('commission_rate', sa.Numeric(precision=5, scale=2), nullable=True, comment='Commission rate percentage (e.g., 5.00 for 5%)'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was last updated'),
    sa.CheckConstraint('commission_rate >= 0 AND commission_rate <= 100', name='ck_sales_rep_commission_rate_range'),
    sa.PrimaryKeyConstraint('id'),
    comment='Sales representatives table for performance tracking'
    )
    op.create_index('idx_sales_reps_email', 'sales_representatives', ['email'], unique=False)
    op.create_index('idx_sales_reps_region', 'sales_representatives', ['region'], unique=False)
    op.create_index(op.f('ix_sales_representatives_created_at'), 'sales_representatives', ['created_at'], unique=False)
    op.create_index(op.f('ix_sales_representatives_email'), 'sales_representatives', ['email'], unique=True)
    op.create_index(op.f('ix_sales_representatives_region'), 'sales_representatives', ['region'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.UUID(), nullable=False, comment='Order unique identifier'),
    sa.Column('customer_id', sa.UUID(), nullable=False, comment='Customer ID'),
    sa.Column('sales_rep_id', sa.UUID(), nullable=True, comment='Sales representative ID (optional)'),
    sa.Column('order_date', sa.DateTime(timezone=True), nullable=False, comment='Order date and time'),
    sa.Column('total_amount', sa.Numeric(precision=15, scale=2), nullable=False, comment='Total order amount'),
    sa.Column('status', sa.String(length=50), nullable=False, comment='Order status: pending, processing, completed, cancelled, refunded'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was last updated'),
    sa.CheckConstraint("status IN ('pending', 'processing', 'completed', 'cancelled', 'refunded')", name='ck_order_status'),
    sa.CheckConstraint('total_amount >= 0', name='ck_order_total_amount_positive'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['sales_rep_id'], ['sales_representatives.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    comment='Orders table (partitioned by created_at for performance)'
    )
    op.create_index('idx_orders_amount', 'orders', ['total_amount'], unique=False)
    op.create_index('idx_orders_customer', 'orders', ['customer_id'], unique=False)
    op.create_index('idx_orders_customer_date', 'orders', ['customer_id', 'order_date'], unique=False)
    op.create_index('idx_orders_date', 'orders', ['order_date'], unique=False)
    op.create_index('idx_orders_date_status', 'orders', ['order_date', 'status'], unique=False)
    op.create_index('idx_orders_sales_rep', 'orders', ['sales_rep_id'], unique=False)
    op.create_index('idx_orders_status', 'orders', ['status'], unique=False)
    op.create_index(op.f('ix_orders_created_at'), 'orders', ['created_at'], unique=False)
    op.create_index(op.f('ix_orders_customer_id'), 'orders', ['customer_id'], unique=False)
    op.create_index(op.f('ix_orders_order_date'), 'orders', ['order_date'], unique=False)
    op.create_index(op.f('ix_orders_sales_rep_id'), 'orders', ['sales_rep_id'], unique=False)
    op.create_index(op.f('ix_orders_status'), 'orders', ['status'], unique=False)
    op.create_index(op.f('ix_orders_total_amount'), 'orders', ['total_amount'], unique=False)
    op.create_table('products',
    sa.Column('name', sa.String(length=255), nullable=False, comment='Product name'),
    sa.Column('category_id', sa.UUID(), nullable=False, comment='Category ID'),
    sa.Column('cost_price', sa.Numeric(precision=10, scale=2), nullable=False, comment='Cost price (for profit calculations)'),
    sa.Column('selling_price', sa.Numeric(precision=10, scale=2), nullable=False, comment='Selling price'),
    sa.Column('stock_quantity', sa.Integer(), nullable=False, comment='Current stock quantity'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was last updated'),
    sa.CheckConstraint('cost_price >= 0', name='ck_product_cost_price_positive'),
    sa.CheckConstraint('selling_price >= 0', name='ck_product_selling_price_positive'),
    sa.CheckConstraint('stock_quantity >= 0', name='ck_product_stock_quantity_positive'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    comment='Products table for e-commerce catalog'
    )
    op.create_index('idx_products_category', 'products', ['category_id'], unique=False)
    op.create_index('idx_products_name', 'products', ['name'], unique=False)
    op.create_index('idx_products_price', 'products', ['selling_price'], unique=False)
    op.create_index('idx_products_stock', 'products', ['stock_quantity'], unique=False)
    op.create_index(op.f('ix_products_category_id'), 'products', ['category_id'], unique=False)
    op.create_index(op.f('ix_products_created_at'), 'products', ['created_at'], unique=False)
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
    op.create_index(op.f('ix_products_selling_price'), 'products', ['selling_price'], unique=False)
    op.create_table('order_items',
    sa.Column('order_id', sa.UUID(), nullable=False, comment='Order ID'),
    sa.Column('product_id', sa.UUID(), nullable=False, comment='Product ID'),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='Quantity ordered'),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False, comment='Unit price at time of order'),
    sa.Column('total_price', sa.Numeric(precision=15, scale=2), nullable=False, comment='Total price (quantity * unit_price)'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was last updated'),
    sa.CheckConstraint('quantity > 0', name='ck_order_item_quantity_positive'),
    sa.CheckConstraint('total_price >= 0', name='ck_order_item_total_price_positive'),
    sa.CheckConstraint('unit_price >= 0', name='ck_order_item_unit_price_positive'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    comment='Order items (line items) for orders'
    )
    op.create_index('idx_order_items_order', 'order_items', ['order_id'], unique=False)
    op.create_index('idx_order_items_product', 'order_items', ['product_id'], unique=False)
    op.create_index('idx_order_items_product_created', 'order_items', ['product_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_order_items_created_at'), 'order_items', ['created_at'], unique=False)
    op.create_index(op.f('ix_order_items_order_id'), 'order_items', ['order_id'], unique=False)
    op.create_index(op.f('ix_order_items_product_id'), 'order_items', ['product_id'], unique=False)
    op.drop_index(op.f('idx_agg_hourly_hour'), table_name='agg_hourly_metrics')
    op.drop_table('agg_hourly_metrics')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agg_hourly_metrics',
    sa.Column('metric_hour', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('revenue', sa.NUMERIC(precision=15, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('order_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('avg_order_value', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('unique_customers', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('metric_hour', name=op.f('agg_hourly_metrics_pkey')),
    comment='Pre-computed hourly metrics for fast queries'
    )
    op.create_index(op.f('idx_agg_hourly_hour'), 'agg_hourly_metrics', [sa.literal_column('metric_hour DESC')], unique=False)
    op.drop_index(op.f('ix_order_items_product_id'), table_name='order_items')
    op.drop_index(op.f('ix_order_items_order_id'), table_name='order_items')
    op.drop_index(op.f('ix_order_items_created_at'), table_name='order_items')
    op.drop_index('idx_order_items_product_created', table_name='order_items')
    op.drop_index('idx_order_items_product', table_name='order_items')
    op.drop_index('idx_order_items_order', table_name='order_items')
    op.drop_table('order_items')
    op.drop_index(op.f('ix_products_selling_price'), table_name='products')
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_index(op.f('ix_products_created_at'), table_name='products')
    op.drop_index(op.f('ix_products_category_id'), table_name='products')
    op.drop_index('idx_products_stock', table_name='products')
    op.drop_index('idx_products_price', table_name='products')
    op.drop_index('idx_products_name', table_name='products')
    op.drop_index('idx_products_category', table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_orders_total_amount'), table_name='orders')
    op.drop_index(op.f('ix_orders_status'), table_name='orders')
    op.drop_index(op.f('ix_orders_sales_rep_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_order_date'), table_name='orders')
    op.drop_index(op.f('ix_orders_customer_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_created_at'), table_name='orders')
    op.drop_index('idx_orders_status', table_name='orders')
    op.drop_index('idx_orders_sales_rep', table_name='orders')
    op.drop_index('idx_orders_date_status', table_name='orders')
    op.drop_index('idx_orders_date', table_name='orders')
    op.drop_index('idx_orders_customer_date', table_name='orders')
    op.drop_index('idx_orders_customer', table_name='orders')
    op.drop_index('idx_orders_amount', table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_sales_representatives_region'), table_name='sales_representatives')
    op.drop_index(op.f('ix_sales_representatives_email'), table_name='sales_representatives')
    op.drop_index(op.f('ix_sales_representatives_created_at'), table_name='sales_representatives')
    op.drop_index('idx_sales_reps_region', table_name='sales_representatives')
    op.drop_index('idx_sales_reps_email', table_name='sales_representatives')
    op.drop_table('sales_representatives')
    op.drop_index(op.f('ix_customers_total_lifetime_value'), table_name='customers')
    op.drop_index(op.f('ix_customers_segment'), table_name='customers')
    op.drop_index(op.f('ix_customers_email'), table_name='customers')
    op.drop_index(op.f('ix_customers_created_at'), table_name='customers')
    op.drop_index('idx_customers_segment', table_name='customers')
    op.drop_index('idx_customers_lifetime_value', table_name='customers')
    op.drop_index('idx_customers_email', table_name='customers')
    op.drop_index('idx_customers_created_at', table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_categories_parent_id'), table_name='categories')
    op.drop_index(op.f('ix_categories_name'), table_name='categories')
    op.drop_index(op.f('ix_categories_created_at'), table_name='categories')
    op.drop_index('idx_categories_parent', table_name='categories')
    op.drop_index('idx_categories_name', table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
